{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css","App.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","className","styles","form","e","preventDefault","label","inputForm","type","value","onChange","target","pattern","title","required","btnForm","Filter","filter","onInputChange","input","ContactList","contacts","onDeleteContact","contactsList","map","id","contactItem","btnContact","onClick","App","JSON","parse","window","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","wrapper","newName","find","alert","shortid","generate","prev","length","titleContacts","oldName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52d83daa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"inputForm\":\"ContactForm_inputForm__2GJhT\",\"btnForm\":\"ContactForm_btnForm__RrRV0\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const handleChangeNumber = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.inputForm}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.inputForm}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={styles.btnForm} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nfunction Filter({ filter, onInputChange }) {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onInputChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        required\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={styles.contactsList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.contactItem}>\n          {name} --- {number}\n          <button\n            className={styles.btnContact}\n            onClick={() => onDeleteContact(name)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport styles from './App.module.css';\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n  });\n  const [filter, setFilter] = useState('');\n\n  const handleChange = e => {\n    setFilter(e.target.value);\n  };\n\n  const repeatName = newName => {\n    return contacts.find(contact => contact.name === newName);\n  };\n\n  const deleteContact = oldName => {\n    setContacts(prev => prev.filter(contact => contact.name !== oldName));\n  };\n\n  const formSubmitHandler = (name, number) => {\n    if (!repeatName(name)) {\n      const contact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n      setContacts(prev => [contact, ...prev]);\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <div className={styles.wrapper}>\n      <h1 className={styles.title}>Phonebook</h1>\n      <ContactForm onSubmit={formSubmitHandler} />\n      {contacts.length > 0 && (\n        <>\n          <h2 className={styles.titleContacts}>Contacts</h2>\n          <Filter filter={filter} onInputChange={handleChange} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={deleteContact}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__14Z-h\",\"contactItem\":\"ContactList_contactItem__EQAbQ\",\"btnContact\":\"ContactList_btnContact__1cPva\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2Rh_f\",\"title\":\"App_title__-GfWs\",\"titleContacts\":\"App_titleContacts__41vwQ\"};"],"sourceRoot":""}